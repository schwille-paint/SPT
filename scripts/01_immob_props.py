import os
import importlib

#### Load own packages
import lbfcs.io
import spt.trackprops as props
importlib.reload(props)
#%%
### Define  paramters
ignore = 1

#apply_filter = 'fix'
apply_filter = 'nofix'
#apply_filter = None

savename_ext='_tprops' # File extension for processed file
############################################################## Define data
#### Path to locs_picked.hdf5
dir_names=[]
dir_names.extend(['/fs/pool/pool-schwille-paint/Data/p06.SP-tracking/19-11-07_th_p-exp-scan_PEG3k20%/id169_R1-54#_R1s1-8_20nM_exp100_p114uW_1/19-11-07_FS'])

file_names=[]
file_names.extend(['id169_R1-54#_R1s1-8_20nM_exp100_p114uW_1_MMStack_Pos0.ome_locs_filter_render_picked_reset.hdf5'])
                   
#%%
############################################################# Read locs, apply props & save locs
#### Create list of paths
path=[os.path.join(dir_names[i],file_names[i]) for i in range(0,len(file_names))]

#### Read-Apply-Save loop
for i in range(0,len(path)):
    #### File read in
    print('File read in ...')
    locs,locs_info=lbfcs.io.load_locs(path[i])
    
    #### Get number of frames
    NoFrames=locs_info[0]['Frames']
    
    #### Apply props
    print('Calculating track_props ...')
    locs_props=props.apply_props_dask(locs,ignore=ignore,NoPartitions=30)
    
    ### Filtering
    groups_nofilter=len(locs_props)

    locs_props=props.filter_(locs_props,NoFrames,apply_filter)
    groups_filter=len(locs_props) # Number of groups after filter

    
    #### Save .hdf5 and .yaml of locs_props
    props_info={'Generated by':'pickprops.get_props',
                'ignore':ignore,
                'apply_filter': apply_filter,
                '# of picks before filter':groups_nofilter,
                '# of picks after filter':groups_filter,        
                }
    
    print('File saving ...')
    lbfcs.io.save_locs(path[i].replace('.hdf5',savename_ext+'.hdf5'),
                           locs_props,
                           [locs_info,props_info],
                           mode='picasso_compatible')


