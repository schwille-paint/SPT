import os
import lbfcs.io

savename_ext='_reset' # File extension for processed file

############################################################## Define data
#### Path to locs_picked.hdf5
dir_names=[]
dir_names.extend(['/fs/pool/pool-schwille-paint/Data/p06.SP-tracking/19-11-07_th_p-exp-scan_PEG3k20%/id169_R1-54#_R1s1-8_20nM_exp100_p114uW_1/19-11-07_FS'])

file_names=[]
file_names.extend(['id169_R1-54#_R1s1-8_20nM_exp100_p114uW_1_MMStack_Pos0.ome_locs_filter_render_picked.hdf5'])
                   
#%%
############################################################# Read locs, apply props & save locs
#### Create list of paths
path=[os.path.join(dir_names[i],file_names[i]) for i in range(0,len(file_names))]

#### Read-Apply-Save loop
for i in range(0,len(path)):
    #### File read in
    print('File read in ...')
    locs,locs_info=lbfcs.io.load_locs(path[i])
    
    min_frame=locs.frame.min()
    locs.frame=locs.frame-min_frame
  
    #### Save .hdf5 and .yaml of locs_props
    add_info=[{'Generated by':'reset_frames.py',
              'Min frame': int(min_frame), 
              }]
    
    print('File saving ...')
    lbfcs.io.save_locs(path[i].replace('.hdf5',savename_ext+'.hdf5'),
                           locs,
                           locs_info+add_info,
                           mode='picasso_compatible')
